name: Deploy Lambda via SAM

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch a ser deployada'
        required: true
        default: 'main'

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Reposit√≥rio
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Configurar AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Instalar SAM CLI
        run: |
          curl -Lo sam.zip https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
          unzip sam.zip -d sam-installation
          sudo ./sam-installation/install

      - name: Build da Lambda (SAM Build)
        run: sam build --use-container
        # --use-container garante que a build seja feita no mesmo ambiente que a AWS espera (Linux/amd64)

      - name: Package da Lambda (SAM Package)
        run: |
          sam package \
            --template-file .aws-sam/build/template.yaml \
            --output-template-file packaged.yaml \
            --s3-bucket ${{ secrets.SAM_S3_BUCKET }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'

      - name: Deploy da Lambda (SAM Deploy)
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name auth-lambda \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'

      - name: Verificar o Deploy
        run: aws cloudformation describe-stacks --stack-name auth-lambda --query "Stacks[0].StackStatus" --output text
